// Test generated by RoostGPT for test telegramBotTest using AI Type Open AI and AI Model gpt-4

package org.telegram.telegrambots.bots;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.telegram.telegrambots.meta.api.methods.stickers.CreateNewStickerSet;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class DefaultAbsSender_execute_c6acd0edec_Test {

    @Mock
    private DefaultAbsSender defaultAbsSender;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testExecute_Success() throws TelegramApiException {
        CreateNewStickerSet createNewStickerSet = new CreateNewStickerSet();
        when(defaultAbsSender.execute(createNewStickerSet)).thenReturn(true);

        Boolean result = defaultAbsSender.execute(createNewStickerSet);
        assertTrue(result);
        verify(defaultAbsSender, times(1)).execute(createNewStickerSet);
    }

    @Test
    public void testExecute_Failure() throws TelegramApiException {
        CreateNewStickerSet createNewStickerSet = new CreateNewStickerSet();
        when(defaultAbsSender.execute(createNewStickerSet)).thenThrow(TelegramApiException.class);

        assertThrows(TelegramApiException.class, () -> defaultAbsSender.execute(createNewStickerSet));
        verify(defaultAbsSender, times(1)).execute(createNewStickerSet);
    }
}
